# Generated by Django 4.2.16 on 2024-11-22 13:34

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import tracelan.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cooperative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Coopérative',
                'verbose_name_plural': 'Coopératives',
                'permissions': (('can_edit', 'Can edit '), ('can_create', 'Can create '), ('can_view', 'can view '), ('can_members', 'can view ')),
            },
        ),
        migrations.CreateModel(
            name='DistrictSanitaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('geojson', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qlook_id', models.CharField(default=tracelan.models.qlook, editable=False, max_length=100, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=100, null=True)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=100, null=True)),
                ('persone_ref_noms', models.CharField(blank=True, default='Jean Kouame', max_length=100, null=True)),
                ('persone_ref_contact', models.CharField(blank=True, default='05 00 05 00 05', max_length=100, null=True)),
                ('num_cnps', models.CharField(blank=True, default='CNPS00000000', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default='+22507070707', max_length=20, null=True)),
                ('nationalite', models.CharField(blank=True, default='00000000', max_length=70, null=True)),
                ('personal_mail', models.CharField(blank=True, default='email@sah.com', max_length=70, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('date_embauche', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('salary', models.CharField(blank=True, max_length=100, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Titre du poste')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Numéro de téléphone')),
                ('photo', models.ImageField(blank=True, default='urap/users/5.png', null=True, upload_to='urap/users')),
                ('sortie', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('slug', models.SlugField(blank=True, editable=False, help_text='slug field', null=True, unique=True, verbose_name='slug ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_edit_employee', 'Can edit employee'), ('can_create_employee', 'Can create employee'), ('can_view_salary', 'can view salary'), ('can_view_employee', 'can view employee')),
            },
        ),
        migrations.CreateModel(
            name='Parcelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('dimension_ha', models.DecimalField(decimal_places=4, max_digits=10)),
                ('polygone_kmz', models.FileField(blank=True, null=True, upload_to='parcelles/')),
                ('geojson', models.JSONField(blank=True, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('status', models.CharField(blank=True, choices=[('En projet', 'En projet'), ('Délimitée', 'Délimitée'), ('Défrichage', 'En cours de défrichage'), ('Prête', 'Prête pour la culture'), ('Aménagement', "En cours d'aménagement"), ('Ensemencée', 'Ensemencée'), ('En croissance', 'En croissance'), ('En floraison', 'En floraison'), ('En fructification', 'En fructification'), ('Récolte', 'Prête pour la récolte'), ('En récolte', 'En cours de récolte'), ('En jachère', 'En jachère'), ('Reconvertie', 'Reconvertie'), ('En reboisement', 'En reboisement'), ('En pause', 'En pause'), ('Observation', 'Sous observation'), ('En traitement', 'En traitement'), ('Abandonnée', 'Abandonnée'), ('En expérimentation', 'En expérimentation'), ('Protégée', 'En zone protégée'), ('Réservée', 'Réservée')], max_length=100, null=True)),
                ('carracteristic', models.JSONField(blank=True, null=True)),
                ('culture', models.JSONField(blank=True, null=True)),
                ('images', models.ImageField(blank=True, null=True, upload_to='parcelles/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Parcelle',
                'verbose_name_plural': 'Parcelles',
                'permissions': (('can_edit', 'Can edit '), ('can_create', 'Can create '), ('can_view', 'can view ')),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Project Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='not_started', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_projects', to='tracelan.employee', verbose_name='Project Manager')),
                ('members', models.ManyToManyField(blank=True, related_name='projects', to='tracelan.employee', verbose_name='Team Members')),
                ('parcelles', models.ManyToManyField(blank=True, related_name='parcelle_projects', to='tracelan.parcelle', verbose_name='parcelles')),
            ],
            options={
                'permissions': (('can_edit', 'Can edit '), ('can_create', 'Can create '), ('can_view', 'can view '), ('can_member', 'can member '), ('can_view_task', 'can view task '), ('can_view_budgets', 'can view budget '), ('can_view_p&l', 'can view p&l ')),
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ville',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('place', models.CharField(blank=True, max_length=100, null=True)),
                ('population', models.CharField(blank=True, max_length=100, null=True)),
                ('is_in', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('osm_id', models.BigIntegerField(blank=True, null=True)),
                ('osm_type', models.CharField(blank=True, max_length=50, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tracelan.districtsanitaire')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Task Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10, verbose_name='Priority')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold')], default='not_started', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tracelan.project', verbose_name='Project')),
            ],
            options={
                'permissions': (('can_edit', 'Can edit '), ('can_create', 'Can create '), ('can_view', 'can view '), ('can_assign_task', 'can assign task ')),
            },
        ),
        migrations.CreateModel(
            name='Producteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('prenom', models.CharField(blank=True, max_length=500, null=True)),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(blank=True, max_length=100, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='products/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cooperative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='producteurs', to='tracelan.cooperative')),
            ],
            options={
                'verbose_name': 'Producteur',
                'verbose_name_plural': 'Producteurs',
                'permissions': (('can_edit', 'Can edit '), ('can_create', 'Can create '), ('can_update', 'Can update '), ('can_view', 'can view ')),
            },
        ),
        migrations.AddField(
            model_name='parcelle',
            name='localite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tracelan.ville'),
        ),
        migrations.AddField(
            model_name='parcelle',
            name='producteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parcelles', to='tracelan.producteur'),
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Milestone Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='tracelan.project', verbose_name='Project')),
            ],
            options={
                'permissions': (('can_edit', 'Can edit '), ('can_create', 'Can create '), ('can_view', 'can view ')),
            },
        ),
        migrations.CreateModel(
            name='HistoricalVille',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('place', models.CharField(blank=True, max_length=100, null=True)),
                ('population', models.CharField(blank=True, max_length=100, null=True)),
                ('is_in', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('osm_id', models.BigIntegerField(blank=True, null=True)),
                ('osm_type', models.CharField(blank=True, max_length=50, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('district', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tracelan.districtsanitaire')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ville',
                'verbose_name_plural': 'historical villes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTask',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Task Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10, verbose_name='Priority')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold')], default='not_started', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated At')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assigned_to', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tracelan.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'historical task',
                'verbose_name_plural': 'historical tasks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRegion',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical region',
                'verbose_name_plural': 'historical regions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProject',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Project Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='not_started', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated At')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tracelan.employee', verbose_name='Project Manager')),
            ],
            options={
                'verbose_name': 'historical project',
                'verbose_name_plural': 'historical projects',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProducteur',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('prenom', models.CharField(blank=True, max_length=500, null=True)),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(blank=True, max_length=100, null=True)),
                ('photo', models.TextField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cooperative', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tracelan.cooperative')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Producteur',
                'verbose_name_plural': 'historical Producteurs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalParcelle',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('dimension_ha', models.DecimalField(decimal_places=4, max_digits=10)),
                ('polygone_kmz', models.TextField(blank=True, max_length=100, null=True)),
                ('geojson', models.JSONField(blank=True, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('status', models.CharField(blank=True, choices=[('En projet', 'En projet'), ('Délimitée', 'Délimitée'), ('Défrichage', 'En cours de défrichage'), ('Prête', 'Prête pour la culture'), ('Aménagement', "En cours d'aménagement"), ('Ensemencée', 'Ensemencée'), ('En croissance', 'En croissance'), ('En floraison', 'En floraison'), ('En fructification', 'En fructification'), ('Récolte', 'Prête pour la récolte'), ('En récolte', 'En cours de récolte'), ('En jachère', 'En jachère'), ('Reconvertie', 'Reconvertie'), ('En reboisement', 'En reboisement'), ('En pause', 'En pause'), ('Observation', 'Sous observation'), ('En traitement', 'En traitement'), ('Abandonnée', 'Abandonnée'), ('En expérimentation', 'En expérimentation'), ('Protégée', 'En zone protégée'), ('Réservée', 'Réservée')], max_length=100, null=True)),
                ('carracteristic', models.JSONField(blank=True, null=True)),
                ('culture', models.JSONField(blank=True, null=True)),
                ('images', models.TextField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('localite', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tracelan.ville')),
                ('producteur', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tracelan.producteur')),
            ],
            options={
                'verbose_name': 'historical Parcelle',
                'verbose_name_plural': 'historical Parcelles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMilestone',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Milestone Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated At')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tracelan.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'historical milestone',
                'verbose_name_plural': 'historical milestones',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEmployee',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('qlook_id', models.CharField(db_index=True, default=tracelan.models.qlook, editable=False, max_length=100)),
                ('gender', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=100, null=True)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=100, null=True)),
                ('persone_ref_noms', models.CharField(blank=True, default='Jean Kouame', max_length=100, null=True)),
                ('persone_ref_contact', models.CharField(blank=True, default='05 00 05 00 05', max_length=100, null=True)),
                ('num_cnps', models.CharField(blank=True, default='CNPS00000000', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default='+22507070707', max_length=20, null=True)),
                ('nationalite', models.CharField(blank=True, default='00000000', max_length=70, null=True)),
                ('personal_mail', models.CharField(blank=True, default='email@sah.com', max_length=70, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('date_embauche', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('salary', models.CharField(blank=True, max_length=100, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Titre du poste')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Numéro de téléphone')),
                ('photo', models.TextField(blank=True, default='urap/users/5.png', max_length=100, null=True)),
                ('sortie', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('slug', models.SlugField(blank=True, editable=False, help_text='slug field', null=True, verbose_name='slug ')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical employee',
                'verbose_name_plural': 'historical employees',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDistrictSanitaire',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('geojson', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tracelan.region')),
            ],
            options={
                'verbose_name': 'historical district sanitaire',
                'verbose_name_plural': 'historical district sanitaires',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDeliverable',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Deliverable Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('file', models.TextField(blank=True, max_length=100, null=True, verbose_name='File')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is Approved')),
                ('submitted_at', models.DateTimeField(blank=True, editable=False, verbose_name='Submitted At')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tracelan.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'historical deliverable',
                'verbose_name_plural': 'historical deliverables',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCooperative',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code', models.CharField(db_index=True, max_length=20)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ville', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tracelan.ville')),
            ],
            options={
                'verbose_name': 'historical Coopérative',
                'verbose_name_plural': 'historical Coopératives',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='districtsanitaire',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tracelan.region'),
        ),
        migrations.CreateModel(
            name='Deliverable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Deliverable Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('file', models.FileField(blank=True, null=True, upload_to='deliverables/', verbose_name='File')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is Approved')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, verbose_name='Submitted At')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliverables', to='tracelan.project', verbose_name='Project')),
            ],
            options={
                'permissions': (('can_edit', 'Can edit '), ('can_create', 'Can create '), ('can_view', 'can view ')),
            },
        ),
        migrations.AddField(
            model_name='cooperative',
            name='ville',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tracelan.ville'),
        ),
    ]
